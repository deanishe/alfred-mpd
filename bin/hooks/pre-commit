#!/usr/bin/env zsh

# Reject if MPD variables in info.plist differ from MPD defaults

# _error <arg>.. | Write red "error" and args to STDERR
_error() {
  echo $(print -P '%F{red}error%f') "$@" >&2
}

# _fail <arg>.. | Write red "error" and args to STDERR, then exit with status 1
_fail() {
  _error "$@"
  exit 1
}

# _staged <path> | Is path staged
_staged() {
  local p="$1"
  git diff --name-only --cached | grep --silent "$p"
  return $?
}

exec 1>&2 # Redirect output to stderr.

_staged src/info.plist || exit 0

root="$( git rev-parse --show-toplevel )"
ip="$root/src/info.plist"

# _getvar <name> | Retrieve value for variable <name>
_getvar() {
  local n=$1
  /usr/libexec/PlistBuddy -c "Print :variables:$n" "$ip"
}

# Fail if info.plist can't be found
test -f "$ip" || { _fail "$ip not found"; }

mpd_host="$( _getvar MPD_HOST )"
mpd_port="$( _getvar MPD_PORT )"
mpd_pass="$( _getvar MPD_PASSWORD )"

[[ "$mpd_host" != "localhost" ]] && _fail "[info.plist] MPD_HOST=$mpd_host, not localhost"
[[ "$mpd_port" != "6600" ]] && _fail "[info.plist] MPD_PORT=$mpd_port, not 6600"
test -n "$mpd_pass" && _fail "[info.plist] MPD_PASSWORD is set"

exit 0
